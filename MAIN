#include <iostream>
#include <string>
#include <unordered_map>
#include <cctype>
using namespace std;

void clearScreen() {
#ifdef _WIN32
    system("cls");
else
    system("clear");
#endif
}

struct TeacherInfo {
    string name;
    string subject;
    string Institute;
    string Faculty;
    int RoomNo;
    string Schedule[5]; 
};

unordered_map<string, TeacherInfo> TeachersMap = {
    {"Benzur", {"Benzur Otibruz", "Programming 1", "ICS", "ICS Building", 101, {
        "Monday:    1A,  Room 105, ICS Building",
        "Tuesday:   1B,  Room 106, ICS Building",
        "Wednesday: 1C,  Room 107, ICS Building",
        "Thursday:  1D,  Room 108, ICS Building",
        "Friday:    1E,  Room 109, ICS Building"
    }}},
    {"Abayon", {"Chrizel Abayon", "Understanding The Self", "IOB",  "IOB Building", 200, {
        "Monday:    1A,  Room 201, IOB Building",
        "Tuesday:   1B,  Room 202, IOB Building",
        "Wednesday: 1C,  Room 203, IOB Building",
        "Thursday:  1D,  Room 204, IOB Building",
        "Friday:    1E,  Room 205, IOB Building"
    }}},
    {"Luat", {"Roovesvelt Luat", "Mathematics", "IOE", "IOE Building", 300, {
        "Monday:    1A,  Room 301, IOE Building",
        "Tuesday:   1B,  Room 302, IOE Building",
        "Wednesday: 1C,  Room 303, IOE Building",
        "Thursday:  1D,  Room 304, IOE Building",
        "Friday:    1E,  Room 305, IOE Building"
    }}},    
    {"Almazan", {"Ivy Almazan","Science", "IOB", "IOB Building", 400, {
        "Monday:    1A,  Room 401, IOB Building",
        "Tuesday:   1B,  Room 402, IOB Building",
        "Wednesday: 1C,  Room 403, IOB Building",
        "Thursday:  1D,  Room 404, IOB Building",
        "Friday:    1E,  Room 405, IOB Building"    
    }}}
};

void get_Teacher_info() {
    string TeacherName;
    cout << "\nEnter Teacher's Name: ";
    cin >> TeacherName;
    auto it = TeachersMap.find(TeacherName);
    if (it != TeachersMap.end()) {
        TeacherInfo Teacher_info = it->second;
        cout << "---Teacher's Information---" << endl;
        cout << "  Full Name: " << Teacher_info.name << "       " << endl;
        cout << "  Subject:   " << Teacher_info.subject <<"        "<< endl;
        cout << "  Institute: " << Teacher_info.Institute << "                  " << endl;
        cout << "  Faculty:   " << Teacher_info.Faculty << "         " << endl;
        cout << "  Room No:   " << Teacher_info.RoomNo << "                  " << endl;
        cout << "  Schedule for the week:               " << endl;

        cout << "+----------------------------------------+" << endl;
        cout << "|  Day  | Section |  Room  |  Building | " << endl;
        cout << "+----------------------------------------+" << endl;
        for (const string& day : Teacher_info.Schedule) {
            cout << "| " << day << " |" << endl;
        }
        cout << "+----------------------------------------+" << endl;
    } else {
        cout << "Invalid teacher." << endl;
        get_Teacher_info();
        
    }
}


class Registrar {
public:
    Registrar() : clientNumber(1) {}

    int generateClientNumber() {
        return clientNumber++;
    }

private:
    int clientNumber;
};

void displayCourses(){
    cout << "            COLEGIO DE MONTALBAN COURSES:             " << endl;
    cout << " +---------------------------------------------------+" << endl;
    cout << " |Institute of ICS:                                  |" << endl;
    cout << " |  •Bachelor of Science in Computer Engineering.    |" << endl;
    cout << " |  •Bachelor of Science in Information Technology.  |" << endl;
    cout << " |Institute of ITE:                                  |" << endl;
    cout << " |  •Bachelor of Elementary Education Generalist.    |" << endl;
    cout << " |  •Bachelor of Secondary Education.                |" << endl;
    cout << " |Institute of IOE:                                  |" << endl;
    cout << " |  •Bachelor of Science in Entrepreneurship.        |" << endl;
    cout << " |  •Bachelor of Science in Business Administration. |" << endl;
    cout << " +---------------------------------------------------+" << endl;
    cout << "\n" << endl;
};

struct StudentInfo {
    string name;
    string StudentNo;
    string course;
    string year;
    string section;
};

unordered_map<int, StudentInfo> students = {
    {230001, {"John Paul Cagalitan","23-0001", "BSCPE", "1st Year-Freshman", "1A"}},
    {230002, {"Edriz Bulagao","23-0002", "BSED", "1st Year-Freshman", "1B"}},
    {230003, {"Mark Zander Emperio","23-0003", "BSCPE", "2nd Year-Sophomore", "2C"}},
    {230004, {"Sheica Ochada","23-0004", "BSIT", "1st Year-Freshman", "1D"}},
    {230005, {"Cody Aguayon","23-0005", "BSCPE", "4th Year-Senior", "4E"}},
    {230006, {"Christian Tau-toan","23-0006", "BSIT", "4th Year-Senior", "4A"}},
    {230007, {"Rommel Fajardo","23-0007", "BSED", "3rd Year-Junior", "3B"}},
    {230008, {"Charlie Norcio","23-0008", "BSBA", "1st Year-Freshman", "1C"}},
    {230009, {"Giovanni Alvero","23-0009", "BSIT", "3rd Year-Junior", "3D"}},
    {230010, {"Rainean Fordelon","23-0010", "BSED", "4th Year-Senior", "4E"}},
    
};
struct Office {
    string building;
    string room_number;
};

unordered_map<string, Office> offices = {
    {"registrar", {"Admin Building", "101"}},
    {"accounting", {"IOB Building", "201"}},
};

void get_student_info() {
    int student_num;
    cout << "Enter student number: ";
    cin >> student_num;

    auto student = students.find(student_num);
    if (student != students.end()) {
        cout << "+------------------------------------+" << endl;
        cout << "|        STUDENT'S INFORMATION       |  " << endl;
        cout << "+------------------------------------+" << endl;
        cout << "| Name:   " << student->second.name << endl;
        cout << "| Student No: " << student->second.StudentNo << endl;
        cout << "| Course: " << student->second.course << endl;
        cout << "| Year:   " << student->second.year << endl;
        cout << "| Section: " << student->second.section << endl;
        cout << "+------------------------------------+" << endl;
        cout << "\n" << endl;
    } else {
        cout << "Student not found." << endl;
        get_student_info();
    }
}


void get_office_info(Registrar& registrar) {
    string office;
    cout << "Enter office (registrar/accounting): ";
    cin >> office;
    auto it = offices.find(office);
    if (it != offices.end()) {
  Office office_info = it->second;
  int clientNumber = registrar.generateClientNumber();
    cout << "+-----------------------------------+" << endl;
    cout << "|         Office Information        |" << endl;
    cout << "+-----------------------------------+" << endl;
    cout << "| Building:      "<< office_info.building<< endl;
    cout << "| Room Number:   "<< office_info.room_number<< endl;
    cout << "| Client Number: "<< clientNumber<< endl;
    cout << "+-----------------------------------+" << endl;
    cout << "\n" << endl;
    } else {
        cout << "Invalid office." <<endl;
        
    }
}

int main() {
    string choice;
    Registrar registrar;
    while (true) {
        cout <<"********************************************************************" << endl;
        cout << "\t\tWELCOME TO OUR INFORMATION SYSTEM"<<endl;
        cout <<"********************************************************************" << endl;
        cout << "\nOptions: "                  << endl;
        cout << "[1]. Get Student Information "<< endl;
        cout << "[2]. Get Office Information  "<< endl;
        cout << "[3]. Courses                 "<< endl;
        cout << "[4]. Teacher's Information   "<< endl;
        cout << "[5]. Quit                    "<< endl;
          
        int option;
        cout << "Enter your choice: ";
        if (!(cin >> option)) {
            cout << "Invalid input. Please enter a number." << endl;
            continue;
}
        switch (option) {
            case 1:
                clearScreen();
                do {
                    get_student_info();
                    cout << "Do you want to search for another student? (yes/no): ";
                    string choice;
                    cin >> choice;
                    clearScreen();
                    if (tolower(choice[0]) != 'y') break;
                } while (true);
                break;

            case 2:
                clearScreen();
                do {
                    get_office_info(registrar);
                    cout << "Do you want to search for another office? (yes/no): ";
                    string choice;
                    cin >> choice;
                    clearScreen();
                    if (tolower(choice[0]) != 'y') break;
                } while (true);
                break;

            case 3:
                clearScreen();
                displayCourses();
                break;

            case 4:
                clearScreen();
                do {
                    get_Teacher_info();
                    cout << "Do you want to search for another teacher? (yes/no): ";
                    string choice;
                    cin >> choice;
                    clearScreen();
                    if (tolower(choice[0]) != 'y') break;
                } while (true);
                break;

            case 5:    
                cout << "Thank You For Using Our System!!" << endl;
                return 0;

            default:
                cout << "Invalid option. Please choose 1, 2, 3, 4, or 5" << endl;
        }        
    }
}
